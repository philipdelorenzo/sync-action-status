name: 'Sync Action Status'
description: 'Sync a GitHub Action status from a repository_dispatch event'
author: "Philip De Lorenzo"
inputs:
  is_org:  # Whether the repository is an organization
    description: 'Whether the repository is an organization'
    required: true
    default: "false"
  gh_token:  # The GitHub token to use for access to the API
    description: 'Your GitHub token'
    required: true
    default: None
  #org:  # The organization to sync the status to
  #  description: 'The organization to sync the status to'
  #  required: false
  #  default: None
  repo:  # The repository to sync the status to
    description: 'The repository to sync the status to'
    required: true
    default: None
  interval:  # The interval to check for the status
    description: 'The interval to check for the status'
    required: false
    default: "30" # The is the interval to check for the status in seconds
  #gh_actor:  # The actor to use for the status
  #  description: 'The github actor to use for the status'
  #  required: true
  #  default: None
  event_type:  # The event type to use for the status
    description: 'The event type to use for the status'
    required: true
    default: None
  debug:
    description: 'Run the workflow in debug mode'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    #- name: Prerequisites
    #  run: |
    #    if [[ "${{ inputs.is_org }}" == 'true' ]]; then
    #      if [[ -z "${{ inputs.org }}" ]] || [[ "${{ inputs.org }}" == "" ]]; then
    #        echo "Organization is required when is_org is true"
    #        exit 1
    #      fi
    #    else:
    #      if [[ -z "${{ inputs.gh_actor }}" ]] || [[ "${{ inputs.gh_actor }}" == "" ]]; then
    #        echo "GitHub Actor is required when is_org is false"
    #        exit 1
    #      fi
    #    fi
    #  shell: bash

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Action Prerequisites
      run: |
        echo -e "\u001b[36mStarting Pip Installation\u001b[0m"
        echo "::group::Pip Installation"
        pip install -r ${{ github.action_path }}/requirements.txt
        echo "::endgroup::"
        echo -e "\u001b[32m\xE2\x9C\x94\u001b[0m Pip Installation Complete"
      shell: bash

    - id: rname
      run: |
        echo "repo_name=$(echo "${{ inputs.repo }}" | rev | cut -d'/' -f1 | rev)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repo }}
        path: ${{ github.workspace }}/${{ inputs.repo }}
        fetch-depth: 0 # Fetch all history for all tags and branches
        token: ${{ inputs.gh_token }}  

    - name: Sync Action Status
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
      run: |
        echo -e "\u001b[36mSync Action Status\u001b[0m"
        #echo "::group::Sync Action Status"
        export WORKDIR="${{ github.workspace }}/${{ inputs.repo }}"
        if [[ "${{ inputs.debug }}" == "true" ]]; then
          python ${{ github.action_path }}/sync-action-status.py --interval "${{ inputs.interval }}" --is_org --repo "${{ inputs.repo }}" --event_type "${{ inputs.event_type }}" --debug
        else
          python ${{ github.action_path }}/sync-action-status.py --interval "${{ inputs.interval }}" --is_org --repo "${{ inputs.repo }}" --event_type "${{ inputs.event_type }}"
        fi

        #echo "::endgroup::"
        echo -e "\u001b[32m\xE2\x9C\x94\u001b[0m Sync Action Status Complete"
      shell: bash
