name: 'Sync Action Status'
description: 'Sync a GitHub Action status from a repository_dispatch event'
author: "Philip De Lorenzo"
inputs:
  is_org:  # Whether the repository is an organization
    description: 'Whether the repository is an organization'
    required: true
    default: "false"
  gh_token:  # The GitHub token to use for access to the API
    description: 'Your GitHub token'
    required: true
    default: None
  org:  # The organization to sync the status to
    description: 'The organization to sync the status to'
    required: false
    default: None
  repo:  # The repository to sync the status to
    description: 'The repository to sync the status to'
    required: true
    default: None
  interval:  # The interval to check for the status
    description: 'The interval to check for the status'
    required: false
    default: "30" # The is the interval to check for the status in seconds
  gh_actor:  # The actor to use for the status
    description: 'The github actor to use for the status'
    required: true
    default: None

#outputs:
#  random-number:
#    description: "Random number"
#    value: ${{ steps.random-number-generator.outputs.random-number }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Action Prerequisites
      run: |
        echo -e "\u001b[36mStarting Pip Installation\u001b[0m"
        echo "::group::Pip Installation"
        pip install -r ${{ github.action_path }}/requirements.txt
        echo "::endgroup::"
        echo -e "\u001b[32m\xE2\x9C\x94\u001b[0m Pip Installation Complete"
      shell: bash

    - name: Sync Action Status
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
        GH_ACTOR: ${{ inputs.gh_actor }}
      run: |
        echo -e "\u001b[36mSync Action Status\u001b[0m"
        #echo "::group::Sync Action Status"
        if [[ -z "${{ inputs.is_org }}" ]] && [[ "${{ inputs.is_org }}" == "true" ]]; then
          python ${{ github.action_path }}/sync-action-status.py --interval "${{ inputs.interval }}" --is_org "${{ inputs.is_org }}" --repo "${{ inputs.repo }}" --org "${{ inputs.org }}"
        else
          python ${{ github.action_path }}/sync-action-status.py --interval "${{ inputs.interval }}" --is_org "${{ inputs.is_org }}" --repo "${{ inputs.repo }}"
        fi
        #echo "::endgroup::"
        echo -e "\u001b[32m\xE2\x9C\x94\u001b[0m Sync Action Status Complete"
      shell: bash
